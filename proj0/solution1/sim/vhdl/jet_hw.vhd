-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity jet_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    jet_pt_0_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_1_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_2_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_3_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_4_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_5_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_6_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_7_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_8_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_9_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_phi_0_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_1_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_2_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_3_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_4_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_5_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_6_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_7_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_8_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_9_V : IN STD_LOGIC_VECTOR (10 downto 0);
    met_pt2_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    met_pt2_V_ap_vld : OUT STD_LOGIC;
    met_phi_V : OUT STD_LOGIC_VECTOR (10 downto 0);
    met_phi_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of jet_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "jet_hw,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2104-2L-e,HLS_INPUT_CLOCK=4.167000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.610750,HLS_SYN_LAT=38,HLS_SYN_TPT=6,HLS_SYN_MEM=4,HLS_SYN_DSP=6,HLS_SYN_FF=2330,HLS_SYN_LUT=3499,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv64_7F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state24_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state30_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state36_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal atan_table4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal atan_table4_ce0 : STD_LOGIC;
    signal atan_table4_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln701_2_fu_361_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_2_reg_635 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state22_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state34_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal sub_ln701_3_fu_367_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_3_reg_640 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_6_fu_383_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_6_reg_645 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state23_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state29_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state35_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal sub_ln701_7_fu_389_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_7_reg_650 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_10_fu_405_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_10_reg_655 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_11_fu_411_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_11_reg_660 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_14_fu_427_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_14_reg_665 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal sub_ln701_15_fu_433_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_15_reg_670 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_18_fu_449_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_18_reg_675 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state32_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal sub_ln701_18_reg_675_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_19_fu_455_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_19_reg_682 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln214_1_fu_622_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln214_1_reg_689 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state21_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state33_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state39_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal icmp_ln185_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_reg_694 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_reg_694_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_reg_694_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_reg_694_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_reg_694_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_698 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_698_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_698_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_698_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_698_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_628_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_703 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_703_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_703_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_703_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sqrt_fixed_33_33_s_fu_272_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_3_reg_709 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_484_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_reg_714 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1371_fu_512_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1371_reg_719 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal grp_sqrt_fixed_33_33_s_fu_272_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage4_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state11_pp0_stage4_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state17_pp0_stage4_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state23_pp0_stage4_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state29_pp0_stage4_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state35_pp0_stage4_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp169 : BOOLEAN;
    signal ap_block_state6_pp0_stage5_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state12_pp0_stage5_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state18_pp0_stage5_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state24_pp0_stage5_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state30_pp0_stage5_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state36_pp0_stage5_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001_ignoreCallOp170 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp171 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state32_pp0_stage1_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp172 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state21_pp0_stage2_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state33_pp0_stage2_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state39_pp0_stage2_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp173 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state22_pp0_stage3_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state34_pp0_stage3_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp174 : BOOLEAN;
    signal grp_ProjX_fu_277_ap_start : STD_LOGIC;
    signal grp_ProjX_fu_277_ap_done : STD_LOGIC;
    signal grp_ProjX_fu_277_ap_idle : STD_LOGIC;
    signal grp_ProjX_fu_277_ap_ready : STD_LOGIC;
    signal grp_ProjX_fu_277_pt_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_ProjX_fu_277_phi_V : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ProjX_fu_277_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_ProjX_fu_287_ap_start : STD_LOGIC;
    signal grp_ProjX_fu_287_ap_done : STD_LOGIC;
    signal grp_ProjX_fu_287_ap_idle : STD_LOGIC;
    signal grp_ProjX_fu_287_ap_ready : STD_LOGIC;
    signal grp_ProjX_fu_287_pt_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_ProjX_fu_287_phi_V : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ProjX_fu_287_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_ProjY_fu_313_ap_start : STD_LOGIC;
    signal grp_ProjY_fu_313_ap_done : STD_LOGIC;
    signal grp_ProjY_fu_313_ap_idle : STD_LOGIC;
    signal grp_ProjY_fu_313_ap_ready : STD_LOGIC;
    signal grp_ProjY_fu_313_pt_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_ProjY_fu_313_phi_V : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ProjY_fu_313_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_ProjY_fu_323_ap_start : STD_LOGIC;
    signal grp_ProjY_fu_323_ap_done : STD_LOGIC;
    signal grp_ProjY_fu_323_ap_idle : STD_LOGIC;
    signal grp_ProjY_fu_323_ap_ready : STD_LOGIC;
    signal grp_ProjY_fu_323_pt_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_ProjY_fu_323_phi_V : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ProjY_fu_323_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_phi_mux_ssdm_int_V_write_ass_phi_fu_265_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln191_fu_609_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter6_ssdm_int_V_write_ass_reg_261 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_ssdm_int_V_write_ass_reg_261 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_ssdm_int_V_write_ass_reg_261 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_ssdm_int_V_write_ass_reg_261 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_ssdm_int_V_write_ass_reg_261 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_ssdm_int_V_write_ass_reg_261 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_ssdm_int_V_write_ass_reg_261 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal grp_ProjX_fu_277_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal grp_ProjX_fu_287_ap_start_reg : STD_LOGIC := '0';
    signal grp_ProjY_fu_313_ap_start_reg : STD_LOGIC := '0';
    signal grp_ProjY_fu_323_ap_start_reg : STD_LOGIC := '0';
    signal select_ln190_fu_590_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal sub_ln701_fu_349_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_1_fu_355_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_4_fu_373_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_5_fu_378_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_8_fu_395_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_9_fu_400_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_12_fu_417_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_13_fu_422_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_16_fu_439_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_17_fu_444_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal or_ln185_fu_464_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1371_1_fu_488_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln1371_fu_498_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1371_1_fu_504_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1371_fu_508_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1371_fu_518_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1371_fu_521_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1371_2_fu_535_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1371_2_fu_545_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_fu_527_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1371_1_fu_549_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal select_ln1371_fu_553_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln187_fu_560_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_fu_570_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln189_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln189_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln887_fu_599_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln68_fu_603_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln214_1_fu_622_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln214_1_fu_461_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln214_1_fu_622_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_628_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln214_fu_481_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_628_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to6 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;

    component sqrt_fixed_33_33_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (16 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component ProjX IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        pt_V : IN STD_LOGIC_VECTOR (15 downto 0);
        phi_V : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component ProjY IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        pt_V : IN STD_LOGIC_VECTOR (15 downto 0);
        phi_V : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component jet_hw_udiv_17s_17ns_17_21_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component jet_hw_mul_mul_17s_17s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jet_hw_mac_muladd_17s_17s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jet_hw_atan_table4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;



begin
    atan_table4_U : component jet_hw_atan_table4
    generic map (
        DataWidth => 7,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => atan_table4_address0,
        ce0 => atan_table4_ce0,
        q0 => atan_table4_q0);

    grp_sqrt_fixed_33_33_s_fu_272 : component sqrt_fixed_33_33_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => tmp_V_reg_703,
        ap_return => grp_sqrt_fixed_33_33_s_fu_272_ap_return,
        ap_ce => grp_sqrt_fixed_33_33_s_fu_272_ap_ce);

    grp_ProjX_fu_277 : component ProjX
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProjX_fu_277_ap_start,
        ap_done => grp_ProjX_fu_277_ap_done,
        ap_idle => grp_ProjX_fu_277_ap_idle,
        ap_ready => grp_ProjX_fu_277_ap_ready,
        ap_ce => ap_const_logic_1,
        pt_V => grp_ProjX_fu_277_pt_V,
        phi_V => grp_ProjX_fu_277_phi_V,
        ap_return => grp_ProjX_fu_277_ap_return);

    grp_ProjX_fu_287 : component ProjX
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProjX_fu_287_ap_start,
        ap_done => grp_ProjX_fu_287_ap_done,
        ap_idle => grp_ProjX_fu_287_ap_idle,
        ap_ready => grp_ProjX_fu_287_ap_ready,
        ap_ce => ap_const_logic_1,
        pt_V => grp_ProjX_fu_287_pt_V,
        phi_V => grp_ProjX_fu_287_phi_V,
        ap_return => grp_ProjX_fu_287_ap_return);

    grp_ProjY_fu_313 : component ProjY
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProjY_fu_313_ap_start,
        ap_done => grp_ProjY_fu_313_ap_done,
        ap_idle => grp_ProjY_fu_313_ap_idle,
        ap_ready => grp_ProjY_fu_313_ap_ready,
        ap_ce => ap_const_logic_1,
        pt_V => grp_ProjY_fu_313_pt_V,
        phi_V => grp_ProjY_fu_313_phi_V,
        ap_return => grp_ProjY_fu_313_ap_return);

    grp_ProjY_fu_323 : component ProjY
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProjY_fu_323_ap_start,
        ap_done => grp_ProjY_fu_323_ap_done,
        ap_idle => grp_ProjY_fu_323_ap_idle,
        ap_ready => grp_ProjY_fu_323_ap_ready,
        ap_ce => ap_const_logic_1,
        pt_V => grp_ProjY_fu_323_pt_V,
        phi_V => grp_ProjY_fu_323_phi_V,
        ap_return => grp_ProjY_fu_323_ap_return);

    jet_hw_udiv_17s_17ns_17_21_1_U11 : component jet_hw_udiv_17s_17ns_17_21_1
    generic map (
        ID => 1,
        NUM_STAGE => 21,
        din0_WIDTH => 17,
        din1_WIDTH => 17,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln701_18_reg_675_pp0_iter2_reg,
        din1 => p_Val2_3_reg_709,
        ce => ap_const_logic_1,
        dout => grp_fu_484_p2);

    jet_hw_mul_mul_17s_17s_32_1_1_U12 : component jet_hw_mul_mul_17s_17s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 17,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln214_1_fu_622_p0,
        din1 => mul_ln214_1_fu_622_p1,
        dout => mul_ln214_1_fu_622_p2);

    jet_hw_mac_muladd_17s_17s_32s_32_1_1_U13 : component jet_hw_mac_muladd_17s_17s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 17,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_628_p0,
        din1 => grp_fu_628_p1,
        din2 => mul_ln214_1_reg_689,
        dout => grp_fu_628_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ProjX_fu_277_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProjX_fu_277_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_ProjX_fu_277_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProjX_fu_277_ap_ready = ap_const_logic_1)) then 
                    grp_ProjX_fu_277_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ProjX_fu_287_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProjX_fu_287_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_ProjX_fu_287_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProjX_fu_287_ap_ready = ap_const_logic_1)) then 
                    grp_ProjX_fu_287_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ProjY_fu_313_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProjY_fu_313_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_ProjY_fu_313_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProjY_fu_313_ap_ready = ap_const_logic_1)) then 
                    grp_ProjY_fu_313_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ProjY_fu_323_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProjY_fu_323_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_ProjY_fu_323_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProjY_fu_323_ap_ready = ap_const_logic_1)) then 
                    grp_ProjY_fu_323_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_ssdm_int_V_write_ass_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_fu_468_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                ap_phi_reg_pp0_iter1_ssdm_int_V_write_ass_reg_261 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_ssdm_int_V_write_ass_reg_261 <= ap_phi_reg_pp0_iter0_ssdm_int_V_write_ass_reg_261;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter2_ssdm_int_V_write_ass_reg_261 <= ap_phi_reg_pp0_iter1_ssdm_int_V_write_ass_reg_261;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_ssdm_int_V_write_ass_reg_261 <= ap_phi_reg_pp0_iter2_ssdm_int_V_write_ass_reg_261;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_ssdm_int_V_write_ass_reg_261 <= ap_phi_reg_pp0_iter3_ssdm_int_V_write_ass_reg_261;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter5_ssdm_int_V_write_ass_reg_261 <= ap_phi_reg_pp0_iter4_ssdm_int_V_write_ass_reg_261;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter6_ssdm_int_V_write_ass_reg_261 <= ap_phi_reg_pp0_iter5_ssdm_int_V_write_ass_reg_261;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                icmp_ln185_reg_694 <= icmp_ln185_fu_468_p2;
                icmp_ln185_reg_694_pp0_iter2_reg <= icmp_ln185_reg_694;
                icmp_ln185_reg_694_pp0_iter3_reg <= icmp_ln185_reg_694_pp0_iter2_reg;
                icmp_ln185_reg_694_pp0_iter4_reg <= icmp_ln185_reg_694_pp0_iter3_reg;
                icmp_ln185_reg_694_pp0_iter5_reg <= icmp_ln185_reg_694_pp0_iter4_reg;
                mul_ln214_1_reg_689 <= mul_ln214_1_fu_622_p2;
                tmp_31_reg_698_pp0_iter2_reg <= tmp_31_reg_698;
                tmp_31_reg_698_pp0_iter3_reg <= tmp_31_reg_698_pp0_iter2_reg;
                tmp_31_reg_698_pp0_iter4_reg <= tmp_31_reg_698_pp0_iter3_reg;
                tmp_31_reg_698_pp0_iter5_reg <= tmp_31_reg_698_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_reg_694_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                p_Val2_3_reg_709 <= grp_sqrt_fixed_33_33_s_fu_272_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_reg_694_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ret_V_reg_714 <= grp_fu_484_p2;
                sub_ln1371_reg_719 <= sub_ln1371_fu_512_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                sub_ln701_10_reg_655 <= sub_ln701_10_fu_405_p2;
                sub_ln701_11_reg_660 <= sub_ln701_11_fu_411_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sub_ln701_14_reg_665 <= sub_ln701_14_fu_427_p2;
                sub_ln701_15_reg_670 <= sub_ln701_15_fu_433_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                sub_ln701_18_reg_675 <= sub_ln701_18_fu_449_p2;
                sub_ln701_18_reg_675_pp0_iter2_reg <= sub_ln701_18_reg_675;
                sub_ln701_19_reg_682 <= sub_ln701_19_fu_455_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                sub_ln701_2_reg_635 <= sub_ln701_2_fu_361_p2;
                sub_ln701_3_reg_640 <= sub_ln701_3_fu_367_p2;
                tmp_V_reg_703_pp0_iter2_reg <= tmp_V_reg_703;
                tmp_V_reg_703_pp0_iter3_reg <= tmp_V_reg_703_pp0_iter2_reg;
                tmp_V_reg_703_pp0_iter4_reg <= tmp_V_reg_703_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                sub_ln701_6_reg_645 <= sub_ln701_6_fu_383_p2;
                sub_ln701_7_reg_650 <= sub_ln701_7_fu_389_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_fu_468_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                tmp_31_reg_698 <= sub_ln701_19_reg_682(16 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                tmp_V_reg_703 <= grp_fu_628_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage5_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to6, ap_block_pp0_stage1_subdone, ap_reset_idle_pp0, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to6 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln1371_fu_521_p2 <= std_logic_vector(unsigned(ap_const_lv18_1) + unsigned(sext_ln1371_fu_518_p1));
    and_ln189_fu_584_p2 <= (xor_ln189_fu_578_p2 and icmp_ln189_fu_564_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp171_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp171 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp172 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp174 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001_ignoreCallOp169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001_ignoreCallOp170 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage3_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage4_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage5_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage4_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage5_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage2_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage3_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage4_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage5_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage4_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage5_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage2_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage3_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage4_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage5_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to6_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_ssdm_int_V_write_ass_phi_fu_265_p4_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, icmp_ln185_reg_694_pp0_iter5_reg, select_ln191_fu_609_p3, ap_phi_reg_pp0_iter6_ssdm_int_V_write_ass_reg_261, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln185_reg_694_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_phi_mux_ssdm_int_V_write_ass_phi_fu_265_p4 <= select_ln191_fu_609_p3;
        else 
            ap_phi_mux_ssdm_int_V_write_ass_phi_fu_265_p4 <= ap_phi_reg_pp0_iter6_ssdm_int_V_write_ass_reg_261;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_ssdm_int_V_write_ass_reg_261 <= "XXXXXXXX";

    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to5)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    atan_table4_address0 <= select_ln190_fu_590_p3(7 - 1 downto 0);

    atan_table4_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            atan_table4_ce0 <= ap_const_logic_1;
        else 
            atan_table4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_ProjX_fu_277_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, grp_ProjX_fu_277_ap_start_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_ProjX_fu_277_ap_start <= ap_const_logic_1;
        else 
            grp_ProjX_fu_277_ap_start <= grp_ProjX_fu_277_ap_start_reg;
        end if; 
    end process;


    grp_ProjX_fu_277_phi_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_phi_0_V, jet_phi_2_V, jet_phi_4_V, jet_phi_6_V, jet_phi_8_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjX_fu_277_phi_V <= jet_phi_8_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjX_fu_277_phi_V <= jet_phi_6_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjX_fu_277_phi_V <= jet_phi_4_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjX_fu_277_phi_V <= jet_phi_2_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjX_fu_277_phi_V <= jet_phi_0_V;
            else 
                grp_ProjX_fu_277_phi_V <= "XXXXXXXXXXX";
            end if;
        else 
            grp_ProjX_fu_277_phi_V <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjX_fu_277_pt_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_pt_0_V, jet_pt_2_V, jet_pt_4_V, jet_pt_6_V, jet_pt_8_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjX_fu_277_pt_V <= jet_pt_8_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjX_fu_277_pt_V <= jet_pt_6_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjX_fu_277_pt_V <= jet_pt_4_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjX_fu_277_pt_V <= jet_pt_2_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjX_fu_277_pt_V <= jet_pt_0_V;
            else 
                grp_ProjX_fu_277_pt_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_ProjX_fu_277_pt_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjX_fu_287_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, grp_ProjX_fu_287_ap_start_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_ProjX_fu_287_ap_start <= ap_const_logic_1;
        else 
            grp_ProjX_fu_287_ap_start <= grp_ProjX_fu_287_ap_start_reg;
        end if; 
    end process;


    grp_ProjX_fu_287_phi_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_phi_1_V, jet_phi_3_V, jet_phi_5_V, jet_phi_7_V, jet_phi_9_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjX_fu_287_phi_V <= jet_phi_9_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjX_fu_287_phi_V <= jet_phi_7_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjX_fu_287_phi_V <= jet_phi_5_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjX_fu_287_phi_V <= jet_phi_3_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjX_fu_287_phi_V <= jet_phi_1_V;
            else 
                grp_ProjX_fu_287_phi_V <= "XXXXXXXXXXX";
            end if;
        else 
            grp_ProjX_fu_287_phi_V <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjX_fu_287_pt_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_pt_1_V, jet_pt_3_V, jet_pt_5_V, jet_pt_7_V, jet_pt_9_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjX_fu_287_pt_V <= jet_pt_9_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjX_fu_287_pt_V <= jet_pt_7_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjX_fu_287_pt_V <= jet_pt_5_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjX_fu_287_pt_V <= jet_pt_3_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjX_fu_287_pt_V <= jet_pt_1_V;
            else 
                grp_ProjX_fu_287_pt_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_ProjX_fu_287_pt_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjY_fu_313_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, grp_ProjY_fu_313_ap_start_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_ProjY_fu_313_ap_start <= ap_const_logic_1;
        else 
            grp_ProjY_fu_313_ap_start <= grp_ProjY_fu_313_ap_start_reg;
        end if; 
    end process;


    grp_ProjY_fu_313_phi_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_phi_0_V, jet_phi_2_V, jet_phi_4_V, jet_phi_6_V, jet_phi_8_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjY_fu_313_phi_V <= jet_phi_8_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjY_fu_313_phi_V <= jet_phi_6_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjY_fu_313_phi_V <= jet_phi_4_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjY_fu_313_phi_V <= jet_phi_2_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjY_fu_313_phi_V <= jet_phi_0_V;
            else 
                grp_ProjY_fu_313_phi_V <= "XXXXXXXXXXX";
            end if;
        else 
            grp_ProjY_fu_313_phi_V <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjY_fu_313_pt_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_pt_0_V, jet_pt_2_V, jet_pt_4_V, jet_pt_6_V, jet_pt_8_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjY_fu_313_pt_V <= jet_pt_8_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjY_fu_313_pt_V <= jet_pt_6_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjY_fu_313_pt_V <= jet_pt_4_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjY_fu_313_pt_V <= jet_pt_2_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjY_fu_313_pt_V <= jet_pt_0_V;
            else 
                grp_ProjY_fu_313_pt_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_ProjY_fu_313_pt_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjY_fu_323_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, grp_ProjY_fu_323_ap_start_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_ProjY_fu_323_ap_start <= ap_const_logic_1;
        else 
            grp_ProjY_fu_323_ap_start <= grp_ProjY_fu_323_ap_start_reg;
        end if; 
    end process;


    grp_ProjY_fu_323_phi_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_phi_1_V, jet_phi_3_V, jet_phi_5_V, jet_phi_7_V, jet_phi_9_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjY_fu_323_phi_V <= jet_phi_9_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjY_fu_323_phi_V <= jet_phi_7_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjY_fu_323_phi_V <= jet_phi_5_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjY_fu_323_phi_V <= jet_phi_3_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjY_fu_323_phi_V <= jet_phi_1_V;
            else 
                grp_ProjY_fu_323_phi_V <= "XXXXXXXXXXX";
            end if;
        else 
            grp_ProjY_fu_323_phi_V <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjY_fu_323_pt_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_pt_1_V, jet_pt_3_V, jet_pt_5_V, jet_pt_7_V, jet_pt_9_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjY_fu_323_pt_V <= jet_pt_9_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjY_fu_323_pt_V <= jet_pt_7_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjY_fu_323_pt_V <= jet_pt_5_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjY_fu_323_pt_V <= jet_pt_3_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjY_fu_323_pt_V <= jet_pt_1_V;
            else 
                grp_ProjY_fu_323_pt_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_ProjY_fu_323_pt_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_628_p0 <= sext_ln214_fu_481_p1(17 - 1 downto 0);
    grp_fu_628_p1 <= sext_ln214_fu_481_p1(17 - 1 downto 0);

    grp_sqrt_fixed_33_33_s_fu_272_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage4_11001_ignoreCallOp169, ap_block_pp0_stage5_11001_ignoreCallOp170, ap_block_pp0_stage0_11001_ignoreCallOp171, ap_block_pp0_stage1_11001_ignoreCallOp172, ap_block_pp0_stage2_11001_ignoreCallOp173, ap_block_pp0_stage3_11001_ignoreCallOp174)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001_ignoreCallOp170) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp171) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp173) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp172) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp169) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp174) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_sqrt_fixed_33_33_s_fu_272_ap_ce <= ap_const_logic_1;
        else 
            grp_sqrt_fixed_33_33_s_fu_272_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln185_fu_468_p2 <= "1" when (or_ln185_fu_464_p2 = ap_const_lv17_0) else "0";
    icmp_ln189_fu_564_p2 <= "0" when (trunc_ln187_fu_560_p1 = ap_const_lv18_0) else "1";
        met_phi_V <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_ssdm_int_V_write_ass_phi_fu_265_p4),11));


    met_phi_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            met_phi_V_ap_vld <= ap_const_logic_1;
        else 
            met_phi_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    met_pt2_V <= tmp_V_reg_703_pp0_iter4_reg;

    met_pt2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
            met_pt2_V_ap_vld <= ap_const_logic_1;
        else 
            met_pt2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln214_1_fu_622_p0 <= sext_ln214_1_fu_461_p1(17 - 1 downto 0);
    mul_ln214_1_fu_622_p1 <= sext_ln214_1_fu_461_p1(17 - 1 downto 0);
    or_ln185_fu_464_p2 <= (sub_ln701_19_reg_682 or sub_ln701_18_reg_675);
    select_ln1371_fu_553_p3 <= 
        sub_ln1371_reg_719 when (tmp_fu_527_p3(0) = '1') else 
        zext_ln1371_1_fu_549_p1;
    select_ln190_fu_590_p3 <= 
        ap_const_lv64_7F when (and_ln189_fu_584_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln191_fu_609_p3 <= 
        sub_ln68_fu_603_p2 when (tmp_31_reg_698_pp0_iter5_reg(0) = '1') else 
        zext_ln887_fu_599_p1;
        sext_ln1371_1_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln1371_fu_498_p2),18));

        sext_ln1371_2_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1371_2_fu_535_p4),18));

        sext_ln1371_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_reg_714),18));

        sext_ln214_1_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln701_19_reg_682),32));

        sext_ln214_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln701_18_reg_675),32));

    sub_ln1371_fu_512_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(zext_ln1371_fu_508_p1));
    sub_ln68_fu_603_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(zext_ln887_fu_599_p1));
    sub_ln701_10_fu_405_p2 <= std_logic_vector(unsigned(sub_ln701_8_fu_395_p2) - unsigned(grp_ProjX_fu_287_ap_return));
    sub_ln701_11_fu_411_p2 <= std_logic_vector(unsigned(sub_ln701_9_fu_400_p2) - unsigned(grp_ProjY_fu_323_ap_return));
    sub_ln701_12_fu_417_p2 <= std_logic_vector(unsigned(sub_ln701_10_reg_655) - unsigned(grp_ProjX_fu_277_ap_return));
    sub_ln701_13_fu_422_p2 <= std_logic_vector(unsigned(sub_ln701_11_reg_660) - unsigned(grp_ProjY_fu_313_ap_return));
    sub_ln701_14_fu_427_p2 <= std_logic_vector(unsigned(sub_ln701_12_fu_417_p2) - unsigned(grp_ProjX_fu_287_ap_return));
    sub_ln701_15_fu_433_p2 <= std_logic_vector(unsigned(sub_ln701_13_fu_422_p2) - unsigned(grp_ProjY_fu_323_ap_return));
    sub_ln701_16_fu_439_p2 <= std_logic_vector(unsigned(sub_ln701_14_reg_665) - unsigned(grp_ProjX_fu_277_ap_return));
    sub_ln701_17_fu_444_p2 <= std_logic_vector(unsigned(sub_ln701_15_reg_670) - unsigned(grp_ProjY_fu_313_ap_return));
    sub_ln701_18_fu_449_p2 <= std_logic_vector(unsigned(sub_ln701_16_fu_439_p2) - unsigned(grp_ProjX_fu_287_ap_return));
    sub_ln701_19_fu_455_p2 <= std_logic_vector(unsigned(sub_ln701_17_fu_444_p2) - unsigned(grp_ProjY_fu_323_ap_return));
    sub_ln701_1_fu_355_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(grp_ProjY_fu_313_ap_return));
    sub_ln701_2_fu_361_p2 <= std_logic_vector(unsigned(sub_ln701_fu_349_p2) - unsigned(grp_ProjX_fu_287_ap_return));
    sub_ln701_3_fu_367_p2 <= std_logic_vector(unsigned(sub_ln701_1_fu_355_p2) - unsigned(grp_ProjY_fu_323_ap_return));
    sub_ln701_4_fu_373_p2 <= std_logic_vector(unsigned(sub_ln701_2_reg_635) - unsigned(grp_ProjX_fu_277_ap_return));
    sub_ln701_5_fu_378_p2 <= std_logic_vector(unsigned(sub_ln701_3_reg_640) - unsigned(grp_ProjY_fu_313_ap_return));
    sub_ln701_6_fu_383_p2 <= std_logic_vector(unsigned(sub_ln701_4_fu_373_p2) - unsigned(grp_ProjX_fu_287_ap_return));
    sub_ln701_7_fu_389_p2 <= std_logic_vector(unsigned(sub_ln701_5_fu_378_p2) - unsigned(grp_ProjY_fu_323_ap_return));
    sub_ln701_8_fu_395_p2 <= std_logic_vector(unsigned(sub_ln701_6_reg_645) - unsigned(grp_ProjX_fu_277_ap_return));
    sub_ln701_9_fu_400_p2 <= std_logic_vector(unsigned(sub_ln701_7_reg_650) - unsigned(grp_ProjY_fu_313_ap_return));
    sub_ln701_fu_349_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(grp_ProjX_fu_277_ap_return));
    tmp_30_fu_570_p3 <= select_ln1371_fu_553_p3(18 downto 18);
    tmp_fu_527_p3 <= add_ln1371_fu_521_p2(17 downto 17);
    trunc_ln1371_1_fu_488_p4 <= grp_fu_484_p2(16 downto 1);
    trunc_ln1371_2_fu_535_p4 <= add_ln1371_fu_521_p2(17 downto 1);
    trunc_ln187_fu_560_p1 <= select_ln1371_fu_553_p3(18 - 1 downto 0);
    xor_ln1371_fu_498_p2 <= (trunc_ln1371_1_fu_488_p4 xor ap_const_lv16_FFFF);
    xor_ln189_fu_578_p2 <= (tmp_30_fu_570_p3 xor ap_const_lv1_1);
    zext_ln1371_1_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1371_2_fu_545_p1),19));
    zext_ln1371_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1371_1_fu_504_p1),19));
    zext_ln887_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(atan_table4_q0),8));
end behav;
