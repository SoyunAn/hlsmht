-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity jet_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    jet_pt_0_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_1_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_2_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_3_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_4_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_5_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_6_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_7_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_8_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_pt_9_V : IN STD_LOGIC_VECTOR (15 downto 0);
    jet_phi_0_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_1_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_2_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_3_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_4_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_5_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_6_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_7_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_8_V : IN STD_LOGIC_VECTOR (10 downto 0);
    jet_phi_9_V : IN STD_LOGIC_VECTOR (10 downto 0);
    met_pt2_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    met_pt2_V_ap_vld : OUT STD_LOGIC;
    met_phi_V : OUT STD_LOGIC_VECTOR (10 downto 0);
    met_phi_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of jet_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "jet_hw,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2104-2L-e,HLS_INPUT_CLOCK=4.167000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.643500,HLS_SYN_LAT=13,HLS_SYN_TPT=6,HLS_SYN_MEM=8,HLS_SYN_DSP=7,HLS_SYN_FF=969,HLS_SYN_LUT=1690,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_600 : STD_LOGIC_VECTOR (10 downto 0) := "11000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal inv_table3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal inv_table3_ce0 : STD_LOGIC;
    signal inv_table3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal atan_table4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal atan_table4_ce0 : STD_LOGIC;
    signal atan_table4_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln701_2_fu_360_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_2_reg_725 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal sub_ln701_3_fu_366_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_3_reg_730 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_6_fu_382_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_6_reg_735 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal sub_ln701_7_fu_388_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_7_reg_740 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_10_fu_404_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_10_reg_745 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_11_fu_410_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_11_reg_750 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_14_fu_426_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_14_reg_755 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal sub_ln701_15_fu_432_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_15_reg_760 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_18_fu_448_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_18_reg_765 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal sub_ln701_19_fu_454_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_19_reg_772 : STD_LOGIC_VECTOR (16 downto 0);
    signal x_V_fu_460_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_V_reg_779 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_V_fu_464_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_V_reg_785 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_791 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_798 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln214_1_fu_706_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln214_1_reg_805 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal icmp_ln237_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln237_reg_810 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln247_fu_525_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln247_reg_816 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln891_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_821 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_1_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_1_reg_831 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_2_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_2_reg_836 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln891_fu_576_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln891_reg_841 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln895_3_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_3_reg_846 : STD_LOGIC_VECTOR (0 downto 0);
    signal atan_index_V_reg_851 : STD_LOGIC_VECTOR (6 downto 0);
    signal atan_table4_load_reg_861 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal grp_ProjX_fu_276_ap_start : STD_LOGIC;
    signal grp_ProjX_fu_276_ap_done : STD_LOGIC;
    signal grp_ProjX_fu_276_ap_idle : STD_LOGIC;
    signal grp_ProjX_fu_276_ap_ready : STD_LOGIC;
    signal grp_ProjX_fu_276_pt_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_ProjX_fu_276_phi_V : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ProjX_fu_276_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_ProjX_fu_286_ap_start : STD_LOGIC;
    signal grp_ProjX_fu_286_ap_done : STD_LOGIC;
    signal grp_ProjX_fu_286_ap_idle : STD_LOGIC;
    signal grp_ProjX_fu_286_ap_ready : STD_LOGIC;
    signal grp_ProjX_fu_286_pt_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_ProjX_fu_286_phi_V : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ProjX_fu_286_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_ProjY_fu_312_ap_start : STD_LOGIC;
    signal grp_ProjY_fu_312_ap_done : STD_LOGIC;
    signal grp_ProjY_fu_312_ap_idle : STD_LOGIC;
    signal grp_ProjY_fu_312_ap_ready : STD_LOGIC;
    signal grp_ProjY_fu_312_pt_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_ProjY_fu_312_phi_V : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ProjY_fu_312_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_ProjY_fu_322_ap_start : STD_LOGIC;
    signal grp_ProjY_fu_322_ap_done : STD_LOGIC;
    signal grp_ProjY_fu_322_ap_idle : STD_LOGIC;
    signal grp_ProjY_fu_322_ap_ready : STD_LOGIC;
    signal grp_ProjY_fu_322_pt_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_ProjY_fu_322_phi_V : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ProjY_fu_322_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_ProjX_fu_276_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal grp_ProjX_fu_286_ap_start_reg : STD_LOGIC := '0';
    signal grp_ProjY_fu_312_ap_start_reg : STD_LOGIC := '0';
    signal grp_ProjY_fu_322_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln544_fu_557_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_1_fu_597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_712_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal sub_ln701_fu_348_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_1_fu_354_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_4_fu_372_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_5_fu_377_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_8_fu_394_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_9_fu_399_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_12_fu_416_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_13_fu_421_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_16_fu_438_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln701_17_fu_443_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal or_ln237_fu_487_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal x_V_1_fu_497_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_V_1_fu_508_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_V_3_fu_502_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal a_V_fu_513_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln895_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln247_1_fu_533_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_541_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_over_b_V_fu_720_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln895_fu_601_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln68_fu_604_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln260_fu_610_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln260_fu_617_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln262_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln68_1_fu_625_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln262_fu_631_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln68_2_fu_643_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln68_fu_649_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln262_fu_639_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln263_fu_653_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln895_fu_660_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln68_fu_667_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal xor_ln237_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln887_fu_685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln264_fu_673_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln887_fu_690_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln214_1_fu_706_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln214_1_fu_484_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln214_1_fu_706_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_712_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln214_fu_573_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_712_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;

    component ProjX IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        pt_V : IN STD_LOGIC_VECTOR (15 downto 0);
        phi_V : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component ProjY IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        pt_V : IN STD_LOGIC_VECTOR (15 downto 0);
        phi_V : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component jet_hw_mul_mul_17s_17s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jet_hw_mac_muladd_17s_17s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jet_hw_mul_mul_16s_16s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component jet_hw_inv_table3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component jet_hw_atan_table4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;



begin
    inv_table3_U : component jet_hw_inv_table3
    generic map (
        DataWidth => 16,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => inv_table3_address0,
        ce0 => inv_table3_ce0,
        q0 => inv_table3_q0);

    atan_table4_U : component jet_hw_atan_table4
    generic map (
        DataWidth => 7,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => atan_table4_address0,
        ce0 => atan_table4_ce0,
        q0 => atan_table4_q0);

    grp_ProjX_fu_276 : component ProjX
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProjX_fu_276_ap_start,
        ap_done => grp_ProjX_fu_276_ap_done,
        ap_idle => grp_ProjX_fu_276_ap_idle,
        ap_ready => grp_ProjX_fu_276_ap_ready,
        ap_ce => ap_const_logic_1,
        pt_V => grp_ProjX_fu_276_pt_V,
        phi_V => grp_ProjX_fu_276_phi_V,
        ap_return => grp_ProjX_fu_276_ap_return);

    grp_ProjX_fu_286 : component ProjX
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProjX_fu_286_ap_start,
        ap_done => grp_ProjX_fu_286_ap_done,
        ap_idle => grp_ProjX_fu_286_ap_idle,
        ap_ready => grp_ProjX_fu_286_ap_ready,
        ap_ce => ap_const_logic_1,
        pt_V => grp_ProjX_fu_286_pt_V,
        phi_V => grp_ProjX_fu_286_phi_V,
        ap_return => grp_ProjX_fu_286_ap_return);

    grp_ProjY_fu_312 : component ProjY
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProjY_fu_312_ap_start,
        ap_done => grp_ProjY_fu_312_ap_done,
        ap_idle => grp_ProjY_fu_312_ap_idle,
        ap_ready => grp_ProjY_fu_312_ap_ready,
        ap_ce => ap_const_logic_1,
        pt_V => grp_ProjY_fu_312_pt_V,
        phi_V => grp_ProjY_fu_312_phi_V,
        ap_return => grp_ProjY_fu_312_ap_return);

    grp_ProjY_fu_322 : component ProjY
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProjY_fu_322_ap_start,
        ap_done => grp_ProjY_fu_322_ap_done,
        ap_idle => grp_ProjY_fu_322_ap_idle,
        ap_ready => grp_ProjY_fu_322_ap_ready,
        ap_ce => ap_const_logic_1,
        pt_V => grp_ProjY_fu_322_pt_V,
        phi_V => grp_ProjY_fu_322_phi_V,
        ap_return => grp_ProjY_fu_322_ap_return);

    jet_hw_mul_mul_17s_17s_32_1_1_U10 : component jet_hw_mul_mul_17s_17s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 17,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln214_1_fu_706_p0,
        din1 => mul_ln214_1_fu_706_p1,
        dout => mul_ln214_1_fu_706_p2);

    jet_hw_mac_muladd_17s_17s_32s_32_1_1_U11 : component jet_hw_mac_muladd_17s_17s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 17,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_712_p0,
        din1 => grp_fu_712_p1,
        din2 => mul_ln214_1_reg_805,
        dout => grp_fu_712_p3);

    jet_hw_mul_mul_16s_16s_16_1_1_U12 : component jet_hw_mul_mul_16s_16s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => select_ln247_reg_816,
        din1 => select_ln891_reg_841,
        dout => a_over_b_V_fu_720_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ProjX_fu_276_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProjX_fu_276_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_ProjX_fu_276_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProjX_fu_276_ap_ready = ap_const_logic_1)) then 
                    grp_ProjX_fu_276_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ProjX_fu_286_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProjX_fu_286_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_ProjX_fu_286_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProjX_fu_286_ap_ready = ap_const_logic_1)) then 
                    grp_ProjX_fu_286_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ProjY_fu_312_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProjY_fu_312_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_ProjY_fu_312_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProjY_fu_312_ap_ready = ap_const_logic_1)) then 
                    grp_ProjY_fu_312_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ProjY_fu_322_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProjY_fu_322_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_ProjY_fu_322_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProjY_fu_322_ap_ready = ap_const_logic_1)) then 
                    grp_ProjY_fu_322_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln237_reg_810 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                atan_index_V_reg_851 <= a_over_b_V_fu_720_p2(15 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln237_reg_810 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                atan_table4_load_reg_861 <= atan_table4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                icmp_ln237_reg_810 <= icmp_ln237_fu_491_p2;
                icmp_ln891_reg_821 <= icmp_ln891_fu_551_p2;
                icmp_ln895_1_reg_831 <= icmp_ln895_1_fu_562_p2;
                icmp_ln895_2_reg_836 <= icmp_ln895_2_fu_568_p2;
                mul_ln214_1_reg_805 <= mul_ln214_1_fu_706_p2;
                select_ln247_reg_816 <= select_ln247_fu_525_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln237_reg_810 = ap_const_lv1_0))) then
                icmp_ln895_3_reg_846 <= icmp_ln895_3_fu_583_p2;
                select_ln891_reg_841 <= select_ln891_fu_576_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                sub_ln701_10_reg_745 <= sub_ln701_10_fu_404_p2;
                sub_ln701_11_reg_750 <= sub_ln701_11_fu_410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sub_ln701_14_reg_755 <= sub_ln701_14_fu_426_p2;
                sub_ln701_15_reg_760 <= sub_ln701_15_fu_432_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                sub_ln701_18_reg_765 <= sub_ln701_18_fu_448_p2;
                sub_ln701_19_reg_772 <= sub_ln701_19_fu_454_p2;
                tmp_1_reg_798 <= sub_ln701_19_fu_454_p2(16 downto 16);
                tmp_reg_791 <= sub_ln701_18_fu_448_p2(16 downto 16);
                x_V_reg_779 <= x_V_fu_460_p1;
                y_V_reg_785 <= y_V_fu_464_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                sub_ln701_2_reg_725 <= sub_ln701_2_fu_360_p2;
                sub_ln701_3_reg_730 <= sub_ln701_3_fu_366_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                sub_ln701_6_reg_735 <= sub_ln701_6_fu_382_p2;
                sub_ln701_7_reg_740 <= sub_ln701_7_fu_388_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage5_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_reset_idle_pp0, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    a_V_fu_513_p3 <= 
        y_V_1_fu_508_p2 when (tmp_1_reg_798(0) = '1') else 
        y_V_reg_785;
    add_ln68_fu_667_p2 <= std_logic_vector(signed(ap_const_lv11_600) + signed(select_ln895_fu_660_p3));
    and_ln262_fu_621_p2 <= (tmp_reg_791 and icmp_ln895_2_reg_836);
    and_ln887_fu_685_p2 <= (xor_ln237_fu_680_p2 and tmp_reg_791);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    atan_table4_address0 <= zext_ln544_1_fu_597_p1(7 - 1 downto 0);

    atan_table4_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            atan_table4_ce0 <= ap_const_logic_1;
        else 
            atan_table4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_ProjX_fu_276_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, grp_ProjX_fu_276_ap_start_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_ProjX_fu_276_ap_start <= ap_const_logic_1;
        else 
            grp_ProjX_fu_276_ap_start <= grp_ProjX_fu_276_ap_start_reg;
        end if; 
    end process;


    grp_ProjX_fu_276_phi_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_phi_0_V, jet_phi_2_V, jet_phi_4_V, jet_phi_6_V, jet_phi_8_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjX_fu_276_phi_V <= jet_phi_8_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjX_fu_276_phi_V <= jet_phi_6_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjX_fu_276_phi_V <= jet_phi_4_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjX_fu_276_phi_V <= jet_phi_2_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjX_fu_276_phi_V <= jet_phi_0_V;
            else 
                grp_ProjX_fu_276_phi_V <= "XXXXXXXXXXX";
            end if;
        else 
            grp_ProjX_fu_276_phi_V <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjX_fu_276_pt_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_pt_0_V, jet_pt_2_V, jet_pt_4_V, jet_pt_6_V, jet_pt_8_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjX_fu_276_pt_V <= jet_pt_8_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjX_fu_276_pt_V <= jet_pt_6_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjX_fu_276_pt_V <= jet_pt_4_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjX_fu_276_pt_V <= jet_pt_2_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjX_fu_276_pt_V <= jet_pt_0_V;
            else 
                grp_ProjX_fu_276_pt_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_ProjX_fu_276_pt_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjX_fu_286_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, grp_ProjX_fu_286_ap_start_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_ProjX_fu_286_ap_start <= ap_const_logic_1;
        else 
            grp_ProjX_fu_286_ap_start <= grp_ProjX_fu_286_ap_start_reg;
        end if; 
    end process;


    grp_ProjX_fu_286_phi_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_phi_1_V, jet_phi_3_V, jet_phi_5_V, jet_phi_7_V, jet_phi_9_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjX_fu_286_phi_V <= jet_phi_9_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjX_fu_286_phi_V <= jet_phi_7_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjX_fu_286_phi_V <= jet_phi_5_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjX_fu_286_phi_V <= jet_phi_3_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjX_fu_286_phi_V <= jet_phi_1_V;
            else 
                grp_ProjX_fu_286_phi_V <= "XXXXXXXXXXX";
            end if;
        else 
            grp_ProjX_fu_286_phi_V <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjX_fu_286_pt_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_pt_1_V, jet_pt_3_V, jet_pt_5_V, jet_pt_7_V, jet_pt_9_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjX_fu_286_pt_V <= jet_pt_9_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjX_fu_286_pt_V <= jet_pt_7_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjX_fu_286_pt_V <= jet_pt_5_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjX_fu_286_pt_V <= jet_pt_3_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjX_fu_286_pt_V <= jet_pt_1_V;
            else 
                grp_ProjX_fu_286_pt_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_ProjX_fu_286_pt_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjY_fu_312_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, grp_ProjY_fu_312_ap_start_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_ProjY_fu_312_ap_start <= ap_const_logic_1;
        else 
            grp_ProjY_fu_312_ap_start <= grp_ProjY_fu_312_ap_start_reg;
        end if; 
    end process;


    grp_ProjY_fu_312_phi_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_phi_0_V, jet_phi_2_V, jet_phi_4_V, jet_phi_6_V, jet_phi_8_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjY_fu_312_phi_V <= jet_phi_8_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjY_fu_312_phi_V <= jet_phi_6_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjY_fu_312_phi_V <= jet_phi_4_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjY_fu_312_phi_V <= jet_phi_2_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjY_fu_312_phi_V <= jet_phi_0_V;
            else 
                grp_ProjY_fu_312_phi_V <= "XXXXXXXXXXX";
            end if;
        else 
            grp_ProjY_fu_312_phi_V <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjY_fu_312_pt_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_pt_0_V, jet_pt_2_V, jet_pt_4_V, jet_pt_6_V, jet_pt_8_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjY_fu_312_pt_V <= jet_pt_8_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjY_fu_312_pt_V <= jet_pt_6_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjY_fu_312_pt_V <= jet_pt_4_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjY_fu_312_pt_V <= jet_pt_2_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjY_fu_312_pt_V <= jet_pt_0_V;
            else 
                grp_ProjY_fu_312_pt_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_ProjY_fu_312_pt_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjY_fu_322_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, grp_ProjY_fu_322_ap_start_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_ProjY_fu_322_ap_start <= ap_const_logic_1;
        else 
            grp_ProjY_fu_322_ap_start <= grp_ProjY_fu_322_ap_start_reg;
        end if; 
    end process;


    grp_ProjY_fu_322_phi_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_phi_1_V, jet_phi_3_V, jet_phi_5_V, jet_phi_7_V, jet_phi_9_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjY_fu_322_phi_V <= jet_phi_9_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjY_fu_322_phi_V <= jet_phi_7_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjY_fu_322_phi_V <= jet_phi_5_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjY_fu_322_phi_V <= jet_phi_3_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjY_fu_322_phi_V <= jet_phi_1_V;
            else 
                grp_ProjY_fu_322_phi_V <= "XXXXXXXXXXX";
            end if;
        else 
            grp_ProjY_fu_322_phi_V <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_ProjY_fu_322_pt_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, jet_pt_1_V, jet_pt_3_V, jet_pt_5_V, jet_pt_7_V, jet_pt_9_V, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_ProjY_fu_322_pt_V <= jet_pt_9_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_ProjY_fu_322_pt_V <= jet_pt_7_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_ProjY_fu_322_pt_V <= jet_pt_5_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_ProjY_fu_322_pt_V <= jet_pt_3_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_ProjY_fu_322_pt_V <= jet_pt_1_V;
            else 
                grp_ProjY_fu_322_pt_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_ProjY_fu_322_pt_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_712_p0 <= sext_ln214_fu_573_p1(17 - 1 downto 0);
    grp_fu_712_p1 <= sext_ln214_fu_573_p1(17 - 1 downto 0);
    icmp_ln237_fu_491_p2 <= "1" when (or_ln237_fu_487_p2 = ap_const_lv17_0) else "0";
    icmp_ln891_fu_551_p2 <= "0" when (tmp_2_fu_541_p4 = ap_const_lv4_0) else "1";
    icmp_ln895_1_fu_562_p2 <= "1" when (unsigned(a_V_fu_513_p3) > unsigned(x_V_3_fu_502_p3)) else "0";
    icmp_ln895_2_fu_568_p2 <= "1" when (signed(sub_ln701_19_reg_772) > signed(ap_const_lv17_0)) else "0";
    icmp_ln895_3_fu_583_p2 <= "1" when (signed(sub_ln701_18_reg_765) > signed(ap_const_lv17_0)) else "0";
    icmp_ln895_fu_519_p2 <= "1" when (unsigned(x_V_3_fu_502_p3) > unsigned(a_V_fu_513_p3)) else "0";
    inv_table3_address0 <= zext_ln544_fu_557_p1(12 - 1 downto 0);

    inv_table3_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            inv_table3_ce0 <= ap_const_logic_1;
        else 
            inv_table3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    met_phi_V <= 
        ap_const_lv11_0 when (icmp_ln237_reg_810(0) = '1') else 
        select_ln887_fu_690_p3;

    met_phi_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            met_phi_V_ap_vld <= ap_const_logic_1;
        else 
            met_phi_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    met_pt2_V <= grp_fu_712_p3;

    met_pt2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            met_pt2_V_ap_vld <= ap_const_logic_1;
        else 
            met_pt2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln214_1_fu_706_p0 <= sext_ln214_1_fu_484_p1(17 - 1 downto 0);
    mul_ln214_1_fu_706_p1 <= sext_ln214_1_fu_484_p1(17 - 1 downto 0);
    or_ln237_fu_487_p2 <= (sub_ln701_19_reg_772 or sub_ln701_18_reg_765);
    select_ln247_1_fu_533_p3 <= 
        x_V_3_fu_502_p3 when (icmp_ln895_fu_519_p2(0) = '1') else 
        a_V_fu_513_p3;
    select_ln247_fu_525_p3 <= 
        a_V_fu_513_p3 when (icmp_ln895_fu_519_p2(0) = '1') else 
        x_V_3_fu_502_p3;
    select_ln260_fu_610_p3 <= 
        sub_ln68_fu_604_p2 when (icmp_ln895_1_reg_831(0) = '1') else 
        zext_ln895_fu_601_p1;
    select_ln262_fu_631_p3 <= 
        sub_ln68_1_fu_625_p2 when (and_ln262_fu_621_p2(0) = '1') else 
        zext_ln260_fu_617_p1;
    select_ln263_fu_653_p3 <= 
        sext_ln68_fu_649_p1 when (tmp_1_reg_798(0) = '1') else 
        zext_ln262_fu_639_p1;
    select_ln264_fu_673_p3 <= 
        add_ln68_fu_667_p2 when (tmp_1_reg_798(0) = '1') else 
        select_ln895_fu_660_p3;
    select_ln887_fu_690_p3 <= 
        select_ln264_fu_673_p3 when (and_ln887_fu_685_p2(0) = '1') else 
        select_ln895_fu_660_p3;
    select_ln891_fu_576_p3 <= 
        ap_const_lv16_1 when (icmp_ln891_reg_821(0) = '1') else 
        inv_table3_q0;
    select_ln895_fu_660_p3 <= 
        select_ln263_fu_653_p3 when (icmp_ln895_3_reg_846(0) = '1') else 
        zext_ln262_fu_639_p1;
        sext_ln214_1_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln701_19_reg_772),32));

        sext_ln214_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln701_18_reg_765),32));

        sext_ln68_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln68_2_fu_643_p2),11));

    sub_ln68_1_fu_625_p2 <= std_logic_vector(signed(ap_const_lv10_200) - signed(zext_ln260_fu_617_p1));
    sub_ln68_2_fu_643_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(select_ln262_fu_631_p3));
    sub_ln68_fu_604_p2 <= std_logic_vector(signed(ap_const_lv9_100) - signed(zext_ln895_fu_601_p1));
    sub_ln701_10_fu_404_p2 <= std_logic_vector(unsigned(sub_ln701_8_fu_394_p2) - unsigned(grp_ProjX_fu_286_ap_return));
    sub_ln701_11_fu_410_p2 <= std_logic_vector(unsigned(sub_ln701_9_fu_399_p2) - unsigned(grp_ProjY_fu_322_ap_return));
    sub_ln701_12_fu_416_p2 <= std_logic_vector(unsigned(sub_ln701_10_reg_745) - unsigned(grp_ProjX_fu_276_ap_return));
    sub_ln701_13_fu_421_p2 <= std_logic_vector(unsigned(sub_ln701_11_reg_750) - unsigned(grp_ProjY_fu_312_ap_return));
    sub_ln701_14_fu_426_p2 <= std_logic_vector(unsigned(sub_ln701_12_fu_416_p2) - unsigned(grp_ProjX_fu_286_ap_return));
    sub_ln701_15_fu_432_p2 <= std_logic_vector(unsigned(sub_ln701_13_fu_421_p2) - unsigned(grp_ProjY_fu_322_ap_return));
    sub_ln701_16_fu_438_p2 <= std_logic_vector(unsigned(sub_ln701_14_reg_755) - unsigned(grp_ProjX_fu_276_ap_return));
    sub_ln701_17_fu_443_p2 <= std_logic_vector(unsigned(sub_ln701_15_reg_760) - unsigned(grp_ProjY_fu_312_ap_return));
    sub_ln701_18_fu_448_p2 <= std_logic_vector(unsigned(sub_ln701_16_fu_438_p2) - unsigned(grp_ProjX_fu_286_ap_return));
    sub_ln701_19_fu_454_p2 <= std_logic_vector(unsigned(sub_ln701_17_fu_443_p2) - unsigned(grp_ProjY_fu_322_ap_return));
    sub_ln701_1_fu_354_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(grp_ProjY_fu_312_ap_return));
    sub_ln701_2_fu_360_p2 <= std_logic_vector(unsigned(sub_ln701_fu_348_p2) - unsigned(grp_ProjX_fu_286_ap_return));
    sub_ln701_3_fu_366_p2 <= std_logic_vector(unsigned(sub_ln701_1_fu_354_p2) - unsigned(grp_ProjY_fu_322_ap_return));
    sub_ln701_4_fu_372_p2 <= std_logic_vector(unsigned(sub_ln701_2_reg_725) - unsigned(grp_ProjX_fu_276_ap_return));
    sub_ln701_5_fu_377_p2 <= std_logic_vector(unsigned(sub_ln701_3_reg_730) - unsigned(grp_ProjY_fu_312_ap_return));
    sub_ln701_6_fu_382_p2 <= std_logic_vector(unsigned(sub_ln701_4_fu_372_p2) - unsigned(grp_ProjX_fu_286_ap_return));
    sub_ln701_7_fu_388_p2 <= std_logic_vector(unsigned(sub_ln701_5_fu_377_p2) - unsigned(grp_ProjY_fu_322_ap_return));
    sub_ln701_8_fu_394_p2 <= std_logic_vector(unsigned(sub_ln701_6_reg_735) - unsigned(grp_ProjX_fu_276_ap_return));
    sub_ln701_9_fu_399_p2 <= std_logic_vector(unsigned(sub_ln701_7_reg_740) - unsigned(grp_ProjY_fu_312_ap_return));
    sub_ln701_fu_348_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(grp_ProjX_fu_276_ap_return));
    tmp_2_fu_541_p4 <= select_ln247_1_fu_533_p3(15 downto 12);
    x_V_1_fu_497_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(x_V_reg_779));
    x_V_3_fu_502_p3 <= 
        x_V_1_fu_497_p2 when (tmp_reg_791(0) = '1') else 
        x_V_reg_779;
    x_V_fu_460_p1 <= sub_ln701_18_fu_448_p2(16 - 1 downto 0);
    xor_ln237_fu_680_p2 <= (icmp_ln237_reg_810 xor ap_const_lv1_1);
    y_V_1_fu_508_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(y_V_reg_785));
    y_V_fu_464_p1 <= sub_ln701_19_fu_454_p2(16 - 1 downto 0);
    zext_ln260_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln260_fu_610_p3),10));
    zext_ln262_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln262_fu_631_p3),11));
    zext_ln544_1_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(atan_index_V_reg_851),64));
    zext_ln544_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln247_1_fu_533_p3),64));
    zext_ln895_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(atan_table4_load_reg_861),9));
end behav;
